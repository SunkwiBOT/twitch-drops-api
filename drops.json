import json
from datetime import datetime

def process_twitch_drops(data_source, from_file=True):
    """
    Processes Twitch drop campaign data from a JSON source.

    Args:
        data_source: Either a file path (str) or a JSON string.
        from_file: Boolean indicating if the data source is a file.

    Returns:
        None. Prints formatted campaign information to the console.
    """
    try:
        if from_file:
            with open(data_source, 'r', encoding='utf-8') as f:
                data = json.load(f)
        else:
            data = json.loads(data_source)
    except json.JSONDecodeError as e:
        print(f"Error decoding JSON: {e}")
        return
    except FileNotFoundError as e:
        print(f"File not found: {e}")
        return

    print("Active Twitch Drop Campaigns:\n")

    for campaign in data:
        if campaign.get("status") == "ACTIVE":
            try:
                game_name = campaign.get("gameDisplayName", "N/A")
                campaign_name = campaign.get("name", "N/A")
                start_at = campaign.get("startAt", "N/A")
                end_at = campaign.get("endAt", "N/A")

                print(f"Game: {game_name}")
                print(f"Campaign: {campaign_name}")
                print(f"Start Time: {start_at}")
                print(f"End Time: {end_at}")
                print("Rewards:")

                for reward in campaign.get("rewards", []):
                    
                    for timeBasedDrop in reward.get("timeBasedDrops", []):
                         requiredMinutesWatched = timeBasedDrop.get("requiredMinutesWatched", "N/A")
                         
                         for benefitEdge in timeBasedDrop.get("benefitEdges", []):
                             benefit = benefitEdge.get("benefit")
                             reward_name = benefit.get("name", "N/A")
                             print(f"  - {reward_name} (Watch for {requiredMinutesWatched} minutes)")

                print("-" * 20)

            except KeyError as e:
                print(f"Missing key in campaign data: {e}")
                print("Skipping this campaign...")
                print("-" * 20)

# Example usage with file path:
# process_twitch_drops("twitch_drops.json")

# Example usage with JSON string (using the provided example data):
json_string = """
[
  {
    "endAt": "2025-01-02T11:29:59.999Z",
    "gameBoxArtURL": "https://static-cdn.jtvnw.net/ttv-boxart/511295_IGDB-120x160.jpg",
    "gameDisplayName": "Predecessor",
    "gameId": "511295",
    "rewards": [
      {
        "id": "8d3f29e8-bdef-11ef-9f47-0a58a9feac02",
        "self": {
          "isAccountConnected": false,
          "__typename": "DropCampaignSelfEdge"
        },
        "allow": {
          "channels": null,
          "isEnabled": false,
          "__typename": "DropCampaignACL"
        },
        "accountLinkURL": "https://predecessorgame.com/link-accounts",
        "description": "Merry Predmas! \\n\\nUnlock new rewards every day between December 25th and January 5th!",
        "detailsURL": "https://predecessorgame.com/twitch-drops",
        "endAt": "2025-01-02T11:29:59.999Z",
        "eventBasedDrops": [],
        "game": {
          "id": "511295",
          "slug": "predecessor",
          "displayName": "Predecessor",
          "__typename": "Game"
        },
        "imageURL": "https://static-cdn.jtvnw.net/twitch-quests-assets/CAMPAIGN/a21142a9-00a0-4b37-9cf9-4af72b36e66e.png",
        "name": "8th Day of Predmas 2024",
        "owner": {
          "id": "22c57757-e520-49ee-a5fa-0313f78c6c1f",
          "name": "Omeda Studios",
          "__typename": "Organization"
        },
        "startAt": "2025-01-01T12:00:00Z",
        "status": "ACTIVE",
        "timeBasedDrops": [
          {
            "id": "9b0e1039-bdef-11ef-ad2e-0a58a9feac02",
            "requiredSubs": 0,
            "benefitEdges": [
              {
                "benefit": {
                  "id": "c5296a40-bc80-11ef-a7e9-0a58a9feac02",
                  "createdAt": "2024-12-17T14:11:12.143Z",
                  "entitlementLimit": 1,
                  "game": {
                    "id": "511295",
                    "name": "Predecessor",
                    "__typename": "Game"
                  },
                  "imageAssetURL": "https://static-cdn.jtvnw.net/twitch-quests-assets/REWARD/fb7e69c0-190b-4caa-8570-a1941623b1f1.png",
                  "isIosAvailable": false,
                  "name": "2025 Celebration Spray",
                  "ownerOrganization": {
                    "id": "22c57757-e520-49ee-a5fa-0313f78c6c1f",
                    "name": "Omeda Studios",
                    "__typename": "Organization"
                  },
                  "__typename": "DropBenefit"
                },
                "entitlementLimit": 1,
                "__typename": "DropBenefitEdge"
              }
            ],
            "endAt": "2025-01-02T11:29:59.999Z",
            "name": "2025 Celebration Spray",
            "preconditionDrops": null,
            "requiredMinutesWatched": 60,
            "startAt": "2025-01-01T12:00:00Z",
            "__typename": "TimeBasedDrop"
          }
        ],
        "__typename": "DropCampaign"
      }
    ],
    "startAt": "2025-01-01T12:00:00.000Z"
  }
]
"""
process_twitch_drops(json_string, from_file=False)
